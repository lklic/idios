components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ImageAndMetada:
      properties:
        metadata:
          example:
            language: ja
            tags:
            - text
          title: Arbitrary metadata to attach to the image
          type: object
        url:
          description: "\nThe url serves as the primary key in the Milvus collection.\
            \ For consistancy, image URLs should not have escape characters. Optionally,\
            \ additional metadata can be associated with the image as an arbitrary\
            \ JSON object.\n\nAssumptions\n- Images should have persitant URLs that\
            \ will not change over time.\n- Images are accessible from the server\
            \ where Idios is hosted and do not require authentication.\n- Only JPEG\
            \ images are supported\n- Images must have their\_dimensions\_above\_\
            150 x 150 pixels, otherwise the API will return an error `IMAGE_SIZE_TOO_SMALL`\n\
            - If one of the image dimension exceeds 1000 pixels, Idios will resize\
            \ the image so that the maximum dimension is set to 1000 pixels and the\
            \ original aspect ratio is kept.\n- Some image links may be permalinks\
            \ from library or museum image collections or be hosted on IIIF servers\
            \ that only accept certain request headers, additionally, the URL may\
            \ return a 303 redirect to point you to the actual image. The API should\
            \ be able to handle the redirect silently and still use the original URL\
            \ as the primary key.\n"
          example: https://iiif.itatti.harvard.edu/iiif/2/yashiro!letters-jp!letter_001.pdf/full/full/0/default.jpg
          title: URL of the image
          type: string
      required:
      - url
      title: ImageAndMetada
      type: object
    ImagePair:
      properties:
        url_left:
          description: "\nThe url serves as the primary key in the Milvus collection.\
            \ For consistancy, image URLs should not have escape characters. Optionally,\
            \ additional metadata can be associated with the image as an arbitrary\
            \ JSON object.\n\nAssumptions\n- Images should have persitant URLs that\
            \ will not change over time.\n- Images are accessible from the server\
            \ where Idios is hosted and do not require authentication.\n- Only JPEG\
            \ images are supported\n- Images must have their\_dimensions\_above\_\
            150 x 150 pixels, otherwise the API will return an error `IMAGE_SIZE_TOO_SMALL`\n\
            - If one of the image dimension exceeds 1000 pixels, Idios will resize\
            \ the image so that the maximum dimension is set to 1000 pixels and the\
            \ original aspect ratio is kept.\n- Some image links may be permalinks\
            \ from library or museum image collections or be hosted on IIIF servers\
            \ that only accept certain request headers, additionally, the URL may\
            \ return a 303 redirect to point you to the actual image. The API should\
            \ be able to handle the redirect silently and still use the original URL\
            \ as the primary key.\n"
          example: https://iiif.itatti.harvard.edu/iiif/2/yashiro!letters-jp!letter_001.pdf/full/full/0/default.jpg
          title: URL of the image
          type: string
        url_right:
          description: "\nThe url serves as the primary key in the Milvus collection.\
            \ For consistancy, image URLs should not have escape characters. Optionally,\
            \ additional metadata can be associated with the image as an arbitrary\
            \ JSON object.\n\nAssumptions\n- Images should have persitant URLs that\
            \ will not change over time.\n- Images are accessible from the server\
            \ where Idios is hosted and do not require authentication.\n- Only JPEG\
            \ images are supported\n- Images must have their\_dimensions\_above\_\
            150 x 150 pixels, otherwise the API will return an error `IMAGE_SIZE_TOO_SMALL`\n\
            - If one of the image dimension exceeds 1000 pixels, Idios will resize\
            \ the image so that the maximum dimension is set to 1000 pixels and the\
            \ original aspect ratio is kept.\n- Some image links may be permalinks\
            \ from library or museum image collections or be hosted on IIIF servers\
            \ that only accept certain request headers, additionally, the URL may\
            \ return a 303 redirect to point you to the actual image. The API should\
            \ be able to handle the redirect silently and still use the original URL\
            \ as the primary key.\n"
          example: https://iiif.itatti.harvard.edu/iiif/2/yashiro!letters-jp!letter_001.pdf/full/full/0/default.jpg
          title: URL of the image
          type: string
      required:
      - url_left
      - url_right
      title: ImagePair
      type: object
    ModelName:
      description: The enumeration of supported models to extract features/embeddings
        from images
      enum:
      - vit_b32
      title: ModelName
    Pagination:
      properties:
        cursor:
          description: '

            The cursor parameter is used for pagination purposes to allow clients
            to retrieve a large set of results in smaller, more manageable chunks.
            The cursor is a string that represents the position of the last item returned
            in the previous API call.


            When making a request to retrieve a set of images, the client can include
            the cursor parameter in the request to specify where in the set of results
            they want to start from. The API will return a subset of the results starting
            after the url specified by the cursor.

            '
          title: Enumeration cursor
          type: string
      required:
      - cursor
      title: Pagination
      type: object
    SearchResult:
      properties:
        metadata:
          example:
            language: ja
            tags:
            - text
          title: Arbitrary metadata to attach to the image
          type: object
        similarity_score:
          $ref: '#/components/schemas/SimilarityScore'
        url:
          description: "\nThe url serves as the primary key in the Milvus collection.\
            \ For consistancy, image URLs should not have escape characters. Optionally,\
            \ additional metadata can be associated with the image as an arbitrary\
            \ JSON object.\n\nAssumptions\n- Images should have persitant URLs that\
            \ will not change over time.\n- Images are accessible from the server\
            \ where Idios is hosted and do not require authentication.\n- Only JPEG\
            \ images are supported\n- Images must have their\_dimensions\_above\_\
            150 x 150 pixels, otherwise the API will return an error `IMAGE_SIZE_TOO_SMALL`\n\
            - If one of the image dimension exceeds 1000 pixels, Idios will resize\
            \ the image so that the maximum dimension is set to 1000 pixels and the\
            \ original aspect ratio is kept.\n- Some image links may be permalinks\
            \ from library or museum image collections or be hosted on IIIF servers\
            \ that only accept certain request headers, additionally, the URL may\
            \ return a 303 redirect to point you to the actual image. The API should\
            \ be able to handle the redirect silently and still use the original URL\
            \ as the primary key.\n"
          example: https://iiif.itatti.harvard.edu/iiif/2/yashiro!letters-jp!letter_001.pdf/full/full/0/default.jpg
          title: URL of the image
          type: string
      required:
      - url
      - similarity_score
      title: SearchResult
      type: object
    SearchResults:
      items:
        $ref: '#/components/schemas/SearchResult'
      title: SearchResults
      type: array
    SimilarityScore:
      maximum: 100.0
      minimum: 0.0
      title: SimilarityScore
      type: number
    SingleImage:
      properties:
        url:
          description: "\nThe url serves as the primary key in the Milvus collection.\
            \ For consistancy, image URLs should not have escape characters. Optionally,\
            \ additional metadata can be associated with the image as an arbitrary\
            \ JSON object.\n\nAssumptions\n- Images should have persitant URLs that\
            \ will not change over time.\n- Images are accessible from the server\
            \ where Idios is hosted and do not require authentication.\n- Only JPEG\
            \ images are supported\n- Images must have their\_dimensions\_above\_\
            150 x 150 pixels, otherwise the API will return an error `IMAGE_SIZE_TOO_SMALL`\n\
            - If one of the image dimension exceeds 1000 pixels, Idios will resize\
            \ the image so that the maximum dimension is set to 1000 pixels and the\
            \ original aspect ratio is kept.\n- Some image links may be permalinks\
            \ from library or museum image collections or be hosted on IIIF servers\
            \ that only accept certain request headers, additionally, the URL may\
            \ return a 303 redirect to point you to the actual image. The API should\
            \ be able to handle the redirect silently and still use the original URL\
            \ as the primary key.\n"
          example: https://iiif.itatti.harvard.edu/iiif/2/yashiro!letters-jp!letter_001.pdf/full/full/0/default.jpg
          title: URL of the image
          type: string
      required:
      - url
      title: SingleImage
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  description: Idios is a reverse image search application with an HTTP API that allows
    you to search for images that are visually similar.
  title: Idios
  version: 0.0.1
openapi: 3.0.2
paths:
  /models/{model_name}/add:
    post:
      operationId: insert_image_models__model_name__add_post
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          $ref: '#/components/schemas/ModelName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageAndMetada'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Adds an image embedding to the index.
      tags:
      - model
  /models/{model_name}/compare:
    post:
      operationId: compare_models__model_name__compare_post
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          $ref: '#/components/schemas/ModelName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagePair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarityScore'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Compute the similarity score between two images
      tags:
      - model
  /models/{model_name}/count:
    get:
      operationId: count_models__model_name__count_get
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          $ref: '#/components/schemas/ModelName'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Number of images
      tags:
      - model
  /models/{model_name}/remove:
    post:
      operationId: remove_image_models__model_name__remove_post
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          $ref: '#/components/schemas/ModelName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleImage'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Remove an image embedding from the index.
      tags:
      - model
  /models/{model_name}/search:
    post:
      operationId: search_models__model_name__search_post
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          $ref: '#/components/schemas/ModelName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleImage'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search images with similar embeddings in the index
      tags:
      - model
  /models/{model_name}/urls:
    post:
      operationId: list_urls_models__model_name__urls_post
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          $ref: '#/components/schemas/ModelName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pagination'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: "\nThe url serves as the primary key in the Milvus\
                    \ collection. For consistancy, image URLs should not have escape\
                    \ characters. Optionally, additional metadata can be associated\
                    \ with the image as an arbitrary JSON object.\n\nAssumptions\n\
                    - Images should have persitant URLs that will not change over\
                    \ time.\n- Images are accessible from the server where Idios is\
                    \ hosted and do not require authentication.\n- Only JPEG images\
                    \ are supported\n- Images must have their\_dimensions\_above\_\
                    150 x 150 pixels, otherwise the API will return an error `IMAGE_SIZE_TOO_SMALL`\n\
                    - If one of the image dimension exceeds 1000 pixels, Idios will\
                    \ resize the image so that the maximum dimension is set to 1000\
                    \ pixels and the original aspect ratio is kept.\n- Some image\
                    \ links may be permalinks from library or museum image collections\
                    \ or be hosted on IIIF servers that only accept certain request\
                    \ headers, additionally, the URL may return a 303 redirect to\
                    \ point you to the actual image. The API should be able to handle\
                    \ the redirect silently and still use the original URL as the\
                    \ primary key.\n"
                  example: https://iiif.itatti.harvard.edu/iiif/2/yashiro!letters-jp!letter_001.pdf/full/full/0/default.jpg
                  title: URL of the image
                  type: string
                title: Response List Urls Models  Model Name  Urls Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: List all images
      tags:
      - model
  /ping:
    get:
      operationId: ping_ping_get
      responses:
        '200':
          content:
            application/json:
              schema:
                enum:
                - pong
                title: Response Ping Ping Get
                type: string
          description: Successful Response
      summary: Ping
      tags:
      - misc
